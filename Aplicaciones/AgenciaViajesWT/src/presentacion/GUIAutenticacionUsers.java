package presentacion;

import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import logica_negocio.GestorSesiones;
import logica_negocio.GestorUsuarios;
import logica_negocio.Sesion;
import logica_negocio.Usuario;
import utilidades.Utilidades;

/**
 *
 * @author Alexander Inagan
 */
public class GUIAutenticacionUsers extends javax.swing.JFrame {

    GestorUsuarios gestor_usuarios = new GestorUsuarios();
    GestorSesiones gestor_sesiones = new GestorSesiones();
    private String contrasenia = "";
    private Usuario usuario_encontrado;
    /**
     * Creates new form GUIAutenticacionUsers
     */
    public GUIAutenticacionUsers() {
        initComponents();
        habilitar_registro_admin();
        this.jBtnAceptar.setEnabled(false);
    }
    
    private String getNombreUsuario() {
        return jCampoTextoUsuario.getText().trim();
    }
    
    private String getContrasenia() {
        return this.contrasenia;
    }
    
    private Usuario getUsuario_encontrado() {
        return this.usuario_encontrado;
    }
    
    private String getFecha_Hora_Ingreso()
    {
        Date fecha = new Date();
        DateFormat fecha_formato = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String fecha_hora_ingreso = fecha_formato.format(fecha);
        return fecha_hora_ingreso;      
    }
    
    private void limpiarCampos() {
        jCampoTextoUsuario.setText("");
        jCampoPassword.setText("");
    }

    private void habilitar_registro_admin()
    {
        GestorUsuarios gestor = new GestorUsuarios();
        ArrayList<Usuario> lista_usuarios = gestor.obtener_todos_Usuarios();
        if(!lista_usuarios.isEmpty())
            jMenuAdministrador.setVisible(true);
        else
            jMenuAdministrador.setVisible(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelNorte = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jPanelCentro = new javax.swing.JPanel();
        jLabelUsuario = new javax.swing.JLabel();
        jCampoTextoUsuario = new javax.swing.JTextField();
        jLabelContrasenia = new javax.swing.JLabel();
        jCampoPassword = new javax.swing.JPasswordField();
        jPanelSur = new javax.swing.JPanel();
        jBtnAceptar = new javax.swing.JButton();
        jBtnCerrar = new javax.swing.JButton();
        jBarraMenu = new javax.swing.JMenuBar();
        jMenuAdministrador = new javax.swing.JMenu();
        jMenuItemRegistrarse = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Inicio de Sesión");

        jPanelNorte.setBackground(new java.awt.Color(147, 221, 221));
        jPanelNorte.setLayout(new java.awt.BorderLayout());

        jLabelTitulo.setBackground(new java.awt.Color(0, 153, 153));
        jLabelTitulo.setFont(new java.awt.Font("Times New Roman", 1, 30)); // NOI18N
        jLabelTitulo.setForeground(new java.awt.Color(51, 51, 51));
        jLabelTitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitulo.setText("Agencia de Viajes World Travels");
        jLabelTitulo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Titulo:  ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13))); // NOI18N
        jPanelNorte.add(jLabelTitulo, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanelNorte, java.awt.BorderLayout.NORTH);

        jPanelCentro.setBackground(new java.awt.Color(153, 153, 153));
        jPanelCentro.setLayout(new java.awt.GridLayout(2, 2));

        jLabelUsuario.setFont(new java.awt.Font("NSimSun", 1, 25)); // NOI18N
        jLabelUsuario.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelUsuario.setText("Usuario: ");
        jLabelUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCentro.add(jLabelUsuario);

        jCampoTextoUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCampoTextoUsuarioFocusLost(evt);
            }
        });
        jPanelCentro.add(jCampoTextoUsuario);

        jLabelContrasenia.setFont(new java.awt.Font("NSimSun", 1, 25)); // NOI18N
        jLabelContrasenia.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelContrasenia.setText("Contraseña: ");
        jLabelContrasenia.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanelCentro.add(jLabelContrasenia);

        jCampoPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jCampoPasswordFocusLost(evt);
            }
        });
        jCampoPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCampoPasswordKeyPressed(evt);
            }
        });
        jPanelCentro.add(jCampoPassword);

        getContentPane().add(jPanelCentro, java.awt.BorderLayout.CENTER);

        jPanelSur.setBackground(new java.awt.Color(142, 209, 209));
        jPanelSur.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)), "Opciones: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        jBtnAceptar.setBackground(new java.awt.Color(153, 153, 255));
        jBtnAceptar.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        jBtnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/registrarse.png"))); // NOI18N
        jBtnAceptar.setText("Iniciar Sesión");
        jBtnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAceptarActionPerformed(evt);
            }
        });
        jPanelSur.add(jBtnAceptar);

        jBtnCerrar.setBackground(new java.awt.Color(153, 153, 255));
        jBtnCerrar.setFont(new java.awt.Font("Times New Roman", 1, 19)); // NOI18N
        jBtnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/cancelar.png"))); // NOI18N
        jBtnCerrar.setText("Cerrar");
        jBtnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCerrarActionPerformed(evt);
            }
        });
        jPanelSur.add(jBtnCerrar);

        getContentPane().add(jPanelSur, java.awt.BorderLayout.SOUTH);

        jBarraMenu.setBackground(new java.awt.Color(0, 153, 153));

        jMenuAdministrador.setText("Administrador");

        jMenuItemRegistrarse.setText("Registrarse");
        jMenuItemRegistrarse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRegistrarseActionPerformed(evt);
            }
        });
        jMenuAdministrador.add(jMenuItemRegistrarse);

        jBarraMenu.add(jMenuAdministrador);

        setJMenuBar(jBarraMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCampoPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCampoPasswordKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jBtnAceptarActionPerformed(null);  
        }
    }//GEN-LAST:event_jCampoPasswordKeyPressed

    private void jBtnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCerrarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jBtnCerrarActionPerformed

    private void jBtnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAceptarActionPerformed
        //Inicia Sesion
        String nombre_usuario = getNombreUsuario();
        String contrasenia_user = getContrasenia();
          
        Usuario miUsuario = null;
        ArrayList<Usuario> lista_usuarios = gestor_usuarios.obtener_todos_Usuarios();
        
        boolean iniciar_sesion = false;
        boolean existe_usuario = existe_usuario(nombre_usuario, lista_usuarios);
       
        if(existe_usuario)
        {
            miUsuario = getUsuario_encontrado();
            //Informacion del intento de inicio de Sesión.
            String user_sesion = getNombreUsuario();
            String contrasenia_sesion = getContrasenia();
            String fecha_ingreso = getFecha_Hora_Ingreso();
            String ingreso_valido = "NO"; 
            
            if((miUsuario.getNombre_usuario().equals(nombre_usuario)) && (miUsuario.getContrasenia().equals(contrasenia_user)))
            {
                iniciar_sesion = true;
                ingreso_valido = "SI";
            }
            
            Sesion sesion_ingresar = new Sesion(user_sesion, contrasenia_sesion, fecha_ingreso, ingreso_valido);
            String res = gestor_sesiones.agregar_Sesion(sesion_ingresar);  
            System.out.println("SESION: " + res);
            System.out.println("Contraseña: " + getContrasenia());
            this.usuario_encontrado = null;
        }
        
        String cargo_usuario;
        if(miUsuario == null)
            cargo_usuario = "";
        else
            cargo_usuario = miUsuario.getCargo();
        
        if(iniciar_sesion) 
        {
            System.out.println("Inicio Sesión Exitoso...");
            GUIMenu vistaMenu = new GUIMenu(cargo_usuario);
            vistaMenu.setVisible(true);
            vistaMenu.setLocation(100, 70);
            vistaMenu.setSize(1000, 600);
            this.dispose();
        }
        else
        {
            Utilidades.mensajeAdvertencia("Contraseña Incorrecta...", "Advertencia");
            limpiarCampos();
        }
        
        
    }//GEN-LAST:event_jBtnAceptarActionPerformed

    private void jMenuItemRegistrarseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRegistrarseActionPerformed
        GUIRegistrarAdmin vistaRegistrarAdmin = new GUIRegistrarAdmin();
        vistaRegistrarAdmin.setVisible(true);
        vistaRegistrarAdmin.setLocationRelativeTo(null);
        vistaRegistrarAdmin.setSize(700, 400);
    }//GEN-LAST:event_jMenuItemRegistrarseActionPerformed

    private void jCampoPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCampoPasswordFocusLost
        String miContrasenia = "";
        char[] password = jCampoPassword.getPassword();
        for(int i=0; i<password.length; i++)
        {
            miContrasenia += password[i];
        }
        this.contrasenia = miContrasenia;
    }//GEN-LAST:event_jCampoPasswordFocusLost

    private void jCampoTextoUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jCampoTextoUsuarioFocusLost
        //Comprueba de que el usuario Existe 
        String nombre_usuario = jCampoTextoUsuario.getText().trim();
        ArrayList<Usuario> lista_usuario = gestor_usuarios.obtener_todos_Usuarios();
        
        boolean existe_usuario = existe_usuario(nombre_usuario, lista_usuario);
        if(!existe_usuario)
        {
            Utilidades.mensajeAdvertencia("El Usuario con ese nombre no se encuentra registrado.", "Advertencia");
            jCampoTextoUsuario.setText("");
            jBtnAceptar.setEnabled(false);
        }
        else
        {
            jBtnAceptar.setEnabled(true);
        }
    }//GEN-LAST:event_jCampoTextoUsuarioFocusLost
//
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(GUIAutenticacionUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(GUIAutenticacionUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(GUIAutenticacionUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(GUIAutenticacionUsers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new GUIAutenticacionUsers().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar jBarraMenu;
    private javax.swing.JButton jBtnAceptar;
    private javax.swing.JButton jBtnCerrar;
    private javax.swing.JPasswordField jCampoPassword;
    private javax.swing.JTextField jCampoTextoUsuario;
    private javax.swing.JLabel jLabelContrasenia;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelUsuario;
    private javax.swing.JMenu jMenuAdministrador;
    private javax.swing.JMenuItem jMenuItemRegistrarse;
    private javax.swing.JPanel jPanelCentro;
    private javax.swing.JPanel jPanelNorte;
    private javax.swing.JPanel jPanelSur;
    // End of variables declaration//GEN-END:variables

    /**
     * Verifica si el usuario se encuentra registrado en el servidor de la Agencia.
     * @param nombre_usuario
     * @param lista_usuarios
     * @return boolean
     */
    private boolean existe_usuario(String nombre_usuario, ArrayList<Usuario> lista_usuarios)
    {
        boolean si_existe = false;
        if(!lista_usuarios.isEmpty())
        {
            for(Usuario usuario : lista_usuarios) {
                if(usuario.getNombre_usuario().equals(nombre_usuario))
                {
                    si_existe = true;
                    usuario_encontrado = usuario;
                    break;
                }    
            }
        }
        return si_existe;
    }
}
